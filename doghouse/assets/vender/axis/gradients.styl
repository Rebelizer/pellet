// ---------
// Gradients
// ---------

// Mixin: Gradient
// 
// Takes one color and outputs a vertical gradient between the offset by 10% in
// either direction, offset precentage customizable via `strength` param. Or
// takes two colors and outputs a vertical gradient that fades between the two
// colors.
// 
// ex. gradient: red blue
// ex. gradient: red

gradient(color1, color2 = null, strength = 10%)
  // shift args if one color mode
  if (typeof(color2) is 'unit')
    strength = color2
    color2 = null

  start = color2 ? color1 : lighten(color1, strength)
  end = color2 ? color2 : darken(color1, strength)
  background: start
  background: end linear-gradient(top, start, end) repeat-x
  if pie-enabled
    -pie-background: unquote('linear-gradient(top,') start unquote(' 0%, ') end unquote('end 100%)')
    pie()

// Mixin: Image Gradient
// 
// Exactly the same as the gradient mixin, but overlays an image to give it
// more texture.
// 
// ex. image-gradient: red pattern.png
// ex. image-gradient: red pattern.png 30%
// ex. image-gradient: red blue pattern.png

image-gradient(color1, color2 = null, imagePath = 'noise.png', strength = 10%)
  // shift args if one color mode
  if (typeof(color2) == 'string')
    strength = imagePath if (typeof(imagePath) == 'unit')
    imagePath = color2
    color2 = null

  start = color2 ? color1 : lighten(color1, strength)
  end = color2 ? color2 : darken(color1, strength)
  background: start
  background: url(img-path imagePath) repeat, end linear-gradient(top, start, end) repeat-x
  if pie-enabled
    -pie-background: unquote('linear-gradient(top,') start unquote(' 0%, ') end unquote('end 100%)')
    pie()
